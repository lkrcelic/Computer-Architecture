# CONAS v3.0 output file
#
# Processor name: RV32I
#
8 ; memory word width
#
32 ; address width
#
#
# Original file: C:/RISC-V/stog.a
#
#
<1,0>	             ;#x5 rezultat funk
<2,0>	             ;#sp 0x500
<3,0>	             ;#a1 A
<4,0>	             ;#a2 B
<5,0>	             ;#t1 za izračunavanje adrese
<6,0>	             ;
<7,0>	00000000  13 ; addi sp, x0, 0x500
|         01
|         00
|         50
<8,0>	             ; 
<9,0>	             ;#ucitaj A i B
<10,0>	00000004  37 ; lui t1, %hi(A)
|         13
|         00
|         00
<11,0>	00000008  13 ; addi t1, t1, %lo(A)
|         03
|         03
|         00
<12,0>	0000000C  83 ; lw a1, 0(t1)
|         25
|         03
|         00
<13,0>	00000010  37 ; lui t1, %hi(B)
|         E3
|         00
|         00
<14,0>	00000014  13 ; addi t1, t1, %lo(B)
|         03
|         03
|         00
<15,0>	00000018  03 ; lw a2, 0(t1)
|         26
|         03
|         00
<16,0>	             ; 
<17,0>	             ; 
<18,0>	             ;#spremi A na stog
<19,0>	0000001C  13 ; addi sp, sp, -4
|         01
|         C1
|         FF
<20,0>	00000020  23 ; sw a1, 0(sp)
|         20
|         B1
|         00
<21,0>	             ;#spremi B na stog
<22,0>	00000024  13 ; addi sp, sp, -4
|         01
|         C1
|         FF
<23,0>	00000028  23 ; sw a2, 0(sp)
|         20
|         C1
|         00
<24,0>	             ; 
<25,0>	             ;#pozovi funckiju
<26,0>	0000002C  EF ; jal ra, FUNK
|         00
|         80
|         01
<27,0>	             ;
<28,0>	             ;#spremi rez
<29,0>	00000030  37 ; lui t1, %hi(REZ)
|         23
|         00
|         00
<30,0>	00000034  13 ; addi t1, t1, %lo(REZ)
|         03
|         03
|         F0
<31,0>	00000038  23 ; sw x5, 0(t1)
|         20
|         53
|         00
<32,0>	             ;
<33,0>	             ;#skini sa stoga
<34,0>	0000003C  13 ; addi sp, sp, 8
|         01
|         81
|         00
<35,0>	             ;
<36,0>	00000040  00 ; halt
|         00
|         00
|         00
<37,0>	             ;
<38,0>	             ;
<39,0>	             ;FUNK
<40,0>	00000044  13 ; addi sp, sp, -4
|         01
|         C1
|         FF
<41,0>	00000048  23 ; sw x6, 0(sp)
|         20
|         61
|         00
<42,0>	             ; 
<43,0>	0000004C  03 ; lw x6, 0x4(sp) #učitaj B
|         23
|         41
|         00
<44,0>	00000050  83 ; lw x5, 0x8(sp) #učitaj A
|         22
|         81
|         00
<45,0>	             ;
<46,0>	00000054  93 ; slli x5, x5, 7
|         92
|         72
|         00
<47,0>	00000058  B3 ; add x5, x5, x6
|         82
|         62
|         00
<48,0>	             ;
<49,0>	0000005C  03 ; lw x6, 0(sp)
|         23
|         01
|         00
<50,0>	00000060  13 ; addi sp, sp, 4
|         01
|         41
|         00
<51,0>	00000064  67 ; jalr x0, 0(ra) 
|         80
|         00
|         00
<52,0>	             ;
<53,0>	             ; org 0x4EF
<54,0>	000004F0! 00 ; dw 0,0,0,0
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
|         00
<55,0>	             ;
<56,0>	             ; org 0x1000
<57,0>	00001000! 05 ;A dw 5
|         00
|         00
|         00
<58,0>	             ; 
<59,0>	             ; org  0x1F00
<60,0>	00001F00! 00 ;REZ dw 0
|         00
|         00
|         00
<61,0>	             ;
<62,0>	             ; org 0xE000
<63,0>	0000E000! 06 ;B dw 6
|         00
|         00
|         00
<64,0>	             ; 
<65,0>	             ; 
#
# Debug Data
#
.debug:
<7,0> <!54,0> <!57,0> <!60,0> <!63,0> 
#
#
# Assembling: OK